//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:2.0.50727.4062
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 2.0.50727.4062 版自动生成。
// 
#pragma warning disable 1591

namespace SQMS.Application.sqms_mobileinterfaces {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="MobileInterfacesSoap", Namespace="http://tempuri.org/")]
    public partial class MobileInterfaces : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback UpdateQualityDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback MobileLoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback RegisterEquipmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateWorkStatusOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public MobileInterfaces() {
            this.Url = global::SQMS.Application.Properties.Settings.Default.SQMS_Application_sqms_mobileinterfaces_MobileInterfaces;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event UpdateQualityDataCompletedEventHandler UpdateQualityDataCompleted;
        
        /// <remarks/>
        public event MobileLoginCompletedEventHandler MobileLoginCompleted;
        
        /// <remarks/>
        public event RegisterEquipmentCompletedEventHandler RegisterEquipmentCompleted;
        
        /// <remarks/>
        public event UpdateWorkStatusCompletedEventHandler UpdateWorkStatusCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateQualityData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateQualityData() {
            object[] results = this.Invoke("UpdateQualityData", new object[0]);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateQualityDataAsync() {
            this.UpdateQualityDataAsync(null);
        }
        
        /// <remarks/>
        public void UpdateQualityDataAsync(object userState) {
            if ((this.UpdateQualityDataOperationCompleted == null)) {
                this.UpdateQualityDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateQualityDataOperationCompleted);
            }
            this.InvokeAsync("UpdateQualityData", new object[0], this.UpdateQualityDataOperationCompleted, userState);
        }
        
        private void OnUpdateQualityDataOperationCompleted(object arg) {
            if ((this.UpdateQualityDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateQualityDataCompleted(this, new UpdateQualityDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MobileLogin", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool MobileLogin(string empId, string equId) {
            object[] results = this.Invoke("MobileLogin", new object[] {
                        empId,
                        equId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void MobileLoginAsync(string empId, string equId) {
            this.MobileLoginAsync(empId, equId, null);
        }
        
        /// <remarks/>
        public void MobileLoginAsync(string empId, string equId, object userState) {
            if ((this.MobileLoginOperationCompleted == null)) {
                this.MobileLoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMobileLoginOperationCompleted);
            }
            this.InvokeAsync("MobileLogin", new object[] {
                        empId,
                        equId}, this.MobileLoginOperationCompleted, userState);
        }
        
        private void OnMobileLoginOperationCompleted(object arg) {
            if ((this.MobileLoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MobileLoginCompleted(this, new MobileLoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RegisterEquipment", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool RegisterEquipment(string equIdentify, string equname, string orgid, string suiteid) {
            object[] results = this.Invoke("RegisterEquipment", new object[] {
                        equIdentify,
                        equname,
                        orgid,
                        suiteid});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void RegisterEquipmentAsync(string equIdentify, string equname, string orgid, string suiteid) {
            this.RegisterEquipmentAsync(equIdentify, equname, orgid, suiteid, null);
        }
        
        /// <remarks/>
        public void RegisterEquipmentAsync(string equIdentify, string equname, string orgid, string suiteid, object userState) {
            if ((this.RegisterEquipmentOperationCompleted == null)) {
                this.RegisterEquipmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRegisterEquipmentOperationCompleted);
            }
            this.InvokeAsync("RegisterEquipment", new object[] {
                        equIdentify,
                        equname,
                        orgid,
                        suiteid}, this.RegisterEquipmentOperationCompleted, userState);
        }
        
        private void OnRegisterEquipmentOperationCompleted(object arg) {
            if ((this.RegisterEquipmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RegisterEquipmentCompleted(this, new RegisterEquipmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateWorkStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateWorkStatus(string equIdentity, string empid, bool isStartup) {
            object[] results = this.Invoke("UpdateWorkStatus", new object[] {
                        equIdentity,
                        empid,
                        isStartup});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateWorkStatusAsync(string equIdentity, string empid, bool isStartup) {
            this.UpdateWorkStatusAsync(equIdentity, empid, isStartup, null);
        }
        
        /// <remarks/>
        public void UpdateWorkStatusAsync(string equIdentity, string empid, bool isStartup, object userState) {
            if ((this.UpdateWorkStatusOperationCompleted == null)) {
                this.UpdateWorkStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateWorkStatusOperationCompleted);
            }
            this.InvokeAsync("UpdateWorkStatus", new object[] {
                        equIdentity,
                        empid,
                        isStartup}, this.UpdateWorkStatusOperationCompleted, userState);
        }
        
        private void OnUpdateWorkStatusOperationCompleted(object arg) {
            if ((this.UpdateWorkStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateWorkStatusCompleted(this, new UpdateWorkStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void UpdateQualityDataCompletedEventHandler(object sender, UpdateQualityDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateQualityDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateQualityDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void MobileLoginCompletedEventHandler(object sender, MobileLoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MobileLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MobileLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void RegisterEquipmentCompletedEventHandler(object sender, RegisterEquipmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RegisterEquipmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RegisterEquipmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void UpdateWorkStatusCompletedEventHandler(object sender, UpdateWorkStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateWorkStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateWorkStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591